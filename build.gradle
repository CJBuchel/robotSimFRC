import static org.apache.tools.ant.taskdefs.condition.Os.*

plugins {
	id "edu.wpi.first.GradleRIO" version "2021.3.1"
	id "google-test-test-suite"
	id "groovy"
	id "cpp"
}

def windows = false

model {
	components {
		robotSim(NativeExecutableSpec) {

			if (windows) {
				println "Windows build..."
			} else {
				return
			}

			targetPlatform wpi.platforms.desktop

			sources.cpp {
				source {
					srcDir 'sim/libs/main/cpp'
					srcDir 'sim/src/cpp'
					include '**/*.cpp', '**/*.cc'
				}
				exportedHeaders {
					srcDir 'sim/libs/main/include'
					srcDir 'sim/src/include'
				}
			}

			binaries.all {
				if (targetPlatform.name == wpi.platforms.desktop) {
					cppCompiler.define '__DESKTOP__'
				}
			}

			wpi.deps.wpilib(it)
			wpi.deps.googleTest(it)
			wpi.deps.vendor.cpp(it)
		}
	}
}

task buildUnixMac(type:Exec) {
	description "Builds program using makefile"
	workingDir "sim/"

	println "Building project..."
	commandLine 'make'
}

task runUnixMac(type:Exec) {
	description "Run program previously built using makefile"
	workingDir "sim/build"
	commandLine './sim'
}

if (hasProperty("windows")) {
	// Compile using gradle regardless of OS
	windows = true
	task SIM(dependsOn: "simulateRobotSimDebugExecutable")
} else { // Use auto detect
	if (isFamily(FAMILY_WINDOWS)) {
		task SIM(dependsOn: "simulateRobotSimDebugExecutable")
	} else if (isFamily(FAMILY_UNIX) || isFamily(FAMILY_MAC)) {
		build.finalizedBy(buildUnixMac)
		runUnixMac.dependsOn(buildUnixMac)
		task SIM(dependsOn: "runUnixMac")
	} else {
		ant.fail("Unknown platform detected")
	}
}

wrapper {
	gradleVersion = '6.0'
}